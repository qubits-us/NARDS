/********************* ROLES **********************/

/********************* UDFS ***********************/

/****************** SEQUENCES ********************/

CREATE SEQUENCE GEN_ARD_ID;
CREATE SEQUENCE GEN_COMMAND_ID;
CREATE SEQUENCE GEN_FIRMWARE_ID;
CREATE SEQUENCE GEN_HASH_ID;
CREATE SEQUENCE GEN_IMG_ID;
CREATE SEQUENCE GEN_LOG_ID;
CREATE SEQUENCE GEN_PANEL_ID;
CREATE SEQUENCE GEN_SCREENITEMS_ID;
CREATE SEQUENCE GEN_SCREENVALUES_ID;
CREATE SEQUENCE GEN_SCREEN_ID;
CREATE SEQUENCE GEN_SKETCH_ID;
/******************** DOMAINS *********************/

/******************* PROCEDURES ******************/

/******************** TABLES **********************/

CREATE TABLE ARDCOMMANDS
(
  COMMANDID integer NOT NULL,
  ARDID integer NOT NULL,
  COMMAND smallint,
  OP1 smallint,
  OP2 smallint,
  OP3 smallint,
  OP4 smallint,
  VALUEINT bigint,
  VALUEFLOAT double precision,
  VALUESTR varchar(512),
  CHUNK blob sub_type 0
);
CREATE TABLE ARDPARAMS
(
  ARDID integer NOT NULL,
  PARAMINDEX integer NOT NULL,
  DISPLAYNAME varchar(20),
  PARAM1 integer,
  PARAM2 integer,
  PARAM3 integer,
  PARAM4 integer
);
CREATE TABLE ARDS
(
  ARDID integer NOT NULL,
  GROUPID integer NOT NULL,
  PROCESSID integer NOT NULL,
  DISPLAYNAME varchar(20),
  LASTIP varchar(20),
  LASTCONNECTION timestamp,
  ONLINE boolean,
  FIRMWARE decimal(8,4),
  OTASTATUS integer
);
CREATE TABLE ARDVALUES
(
  ARDID integer NOT NULL,
  VALINDEX integer NOT NULL,
  DISPLAYNAME varchar(20),
  VALUEINT bigint,
  VALUEFLOAT double precision,
  VALUESTR varchar(512),
  CHUNK blob sub_type 0
);
CREATE TABLE FIRMWARES
(
  FIRMID integer NOT NULL,
  STAMP timestamp NOT NULL,
  ARDID integer,
  VER decimal(8,4),
  FIRMWARE blob sub_type 0,
  FILENAME varchar(200),
  NOTE varchar(500)
);
CREATE TABLE HASHES
(
  HASHID integer NOT NULL,
  HASH bigint NOT NULL,
  GROUPID integer,
  DISPLAYNAME varchar(20),
  ACCESSLEVEL integer,
  LASTACCESS timestamp
);
CREATE TABLE LOGDATA
(
  STAMP timestamp,
  ARDID integer,
  VALUETYPE integer,
  VALUEINDEX integer,
  VALUEINT bigint,
  VALUEFLOAT double precision,
  VALUESTR varchar(512)
);
CREATE TABLE LOGHASH
(
  STAMP timestamp,
  ARDID integer,
  HASH bigint,
  PASS boolean
);
CREATE TABLE LOGIMG
(
  STAMP timestamp,
  ARDID integer,
  IMAGE blob sub_type 0
);
CREATE TABLE LOGPARAMS
(
  STAMP timestamp,
  ARDID integer,
  PARAMINDEX integer,
  PARAM1 integer,
  PARAM2 integer,
  PARAM3 integer,
  PARAM4 integer
);
CREATE TABLE PANELS
(
  PANELID integer NOT NULL,
  DISPLAYNAME varchar(20),
  LASTIP varchar(12),
  LASTCONNECTION timestamp,
  DEFAULTSCREEN integer
);
CREATE TABLE SCREENITEMS
(
  SCREENID integer NOT NULL,
  ITEMID integer NOT NULL,
  ARDID integer NOT NULL,
  DISPLAYNAME varchar(20),
  POSLEFT integer,
  POSTOP integer,
  HEIGHT integer,
  WIDTH integer,
  OFFLINEIMG varchar(200),
  ONLINEIMG varchar(200),
  ALERTIMG varchar(200),
  ONIMG varchar(200),
  OFFIMG varchar(200),
  SHOWNAME boolean,
  DNLEFT integer,
  DNTOP integer,
  DNSIZE integer,
  ACTIONID integer,
  ACTIONVAL integer,
  ACTIONVALTYPE integer,
  ACTIONVALMIN integer,
  ACTIONVALMAX integer,
  ACTIONVALSTEP integer,
  PARAMUP1 integer,
  PARAMUP2 integer,
  PARAMUP3 integer,
  PARAMUP4 integer
);
CREATE TABLE SCREENS
(
  SCREENID integer NOT NULL,
  DISPLAYNAME varchar(20)
);
CREATE TABLE SCREENVALUES
(
  SCREENID integer NOT NULL,
  ITEMID integer NOT NULL,
  ARDID integer NOT NULL,
  VALINDEX integer NOT NULL,
  VALUETYPE integer,
  DISPLAYNUM integer,
  TRIGIVAL integer,
  TRIGFVAL float,
  TRIGCALC integer,
  TRIGTYPE integer,
  POSLEFT integer,
  POSTOP integer,
  FONTSIZE integer,
  FONTCOLOR integer,
  SVID integer NOT NULL
);
CREATE TABLE SKETCHES
(
  SKETCHID integer NOT NULL,
  STAMP timestamp NOT NULL,
  ARDID integer,
  VER decimal(8,4),
  FILENAME varchar(512),
  SKETCH blob sub_type 0
);
/********************* VIEWS **********************/

/******************* EXCEPTIONS *******************/

/******************** TRIGGERS ********************/


CREATE INDEX COMMANDSBYARD ON ARDCOMMANDS (ARDID,COMMANDID);
CREATE INDEX COMMANDSBYID ON ARDCOMMANDS (COMMANDID);
CREATE INDEX PARAMSBYARD ON ARDPARAMS (ARDID,PARAMINDEX);
CREATE INDEX ARDSBYID ON ARDS (ARDID);
CREATE INDEX VALUESBYARD ON ARDVALUES (ARDID,VALINDEX);
CREATE INDEX FIRMSBYID ON FIRMWARES (FIRMID);
CREATE INDEX FIRMSBYNARDSTAMP ON FIRMWARES (ARDID,STAMP);
CREATE INDEX HASHESBYACCESS ON HASHES (LASTACCESS);
CREATE INDEX HASHESBYHASH ON HASHES (HASH);
CREATE INDEX HASHESBYID ON HASHES (HASHID,DISPLAYNAME);
CREATE INDEX LOGSBYARD ON LOGDATA (ARDID,STAMP);
CREATE INDEX HASHLOGBYSTAMP ON LOGHASH (STAMP);
CREATE INDEX IMGBYARD ON LOGIMG (ARDID,STAMP);
CREATE INDEX PARAMLOGBYARD ON LOGPARAMS (ARDID,STAMP);
CREATE INDEX PANELSBYID ON PANELS (PANELID);
CREATE INDEX SCREENITEMSBYID ON SCREENITEMS (SCREENID,ARDID);
CREATE INDEX SCREENSBYID ON SCREENS (SCREENID);
CREATE INDEX SKETCHESBYID ON SKETCHES (SKETCHID);
CREATE INDEX SKETCHESBYNARDSTAMP ON SKETCHES (ARDID,STAMP);
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARDCOMMANDS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARDPARAMS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARDS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARDVALUES TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FIRMWARES TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON HASHES TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOGDATA TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOGHASH TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOGIMG TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOGPARAMS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON PANELS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON SCREENITEMS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON SCREENS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON SCREENVALUES TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON SKETCHES TO  SYSDBA WITH GRANT OPTION;

